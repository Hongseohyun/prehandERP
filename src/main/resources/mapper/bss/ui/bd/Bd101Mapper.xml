<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bd101">

    <resultMap id="hashMapResultVO" type="com.sjinc.bss.framework.data.HashMapResultVO"/>

    <select id="selectGrid" resultMap="hashMapResultVO">
    select  comp_cd,anno_ymon,anno_seq,anno_titl,post_st_dd,post_ed_dd,emer_yn,anno_yn,anno_cont
        ,hits,post_reg_user_id,post_reg_user_nm
        ,atfi_id
        , (select count(*) from sy_atfi_info where comp_cd = #{compCd} and atfi_Id = a.atfi_Id) atfi_cnt
        ,to_char(to_date(reg_dd, 'yyyymmdd'), 'yyyy-mm-dd') as reg_dd
        ,reg_dt,reg_user_id,reg_user_ip
        ,update_dt,update_user_id,update_user_ip
        ,row_number() over(order by  anno_yn desc, reg_dd desc ,anno_seq desc) rnum
    from bd_anno a
    where COMP_CD = #{compCd, jdbcType=VARCHAR}
        <if test="titlPostRegUserNm != null and titlPostRegUserNm != '' ">
            AND (anno_titl LIKE '%'|| #{titlPostRegUserNm} ||'%' OR  post_reg_user_nm LIKE '%'|| #{titlPostRegUserNm} ||'%')
        </if>
        AND reg_dd BETWEEN #{regDd1} AND #{regDd2}
        order by  anno_yn desc, reg_dd desc ,anno_seq desc
        <if test="contentNum != null and startNum != null">
            limit #{contentNum,jdbcType=NUMERIC} offset #{startNum,jdbcType=NUMERIC}
        </if>
    </select>

    <update id="updateGridHit" parameterType="java.util.HashMap">
      update bd_anno
      set hits  = hits + 1
      where comp_cd  = #{compCd, jdbcType=VARCHAR}
      and anno_ymon = #{annoYmon, jdbcType=VARCHAR}
      and anno_seq  = #{annoSeq, jdbcType=VARCHAR}
    </update>

    <select id="selectDetail" resultMap="hashMapResultVO">
        select comp_cd
            ,anno_ymon
            ,anno_seq
            ,anno_titl
            ,post_st_dd
            ,post_ed_dd
            ,emer_yn
            ,anno_yn
            ,anno_cont
            ,hits
            ,post_reg_user_id
            ,post_reg_user_nm
            ,atfi_id
            ,reg_dd
            ,reg_dt
            ,reg_user_id
            ,reg_user_ip
            ,update_dt
            ,update_user_id
            ,update_user_ip
        from bd_anno
        where COMP_CD = #{compCd}
        AND anno_ymon = #{annoYmon}
        AND anno_seq = #{annoSeq}

    </select>
    <delete id="deleteByPrimaryKey" parameterType="map">
        delete from bd_anno
        where comp_cd = #{compCd,jdbcType=VARCHAR}
          and anno_ymon = #{annoYmon,jdbcType=VARCHAR}
          and anno_seq = #{annoSeq,jdbcType=VARCHAR}
    </delete>
</mapper>